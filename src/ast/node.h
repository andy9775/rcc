#ifndef RCC_AST_NODE_H
#define RCC_AST_NODE_H


enum NodeType
{
//EXPRESSION:
    NODE_TYPE_INTEGER_LITERAL,
    NODE_TYPE_CHAR_LITERAL,
    NODE_TYPE_FLOAT_LITERAL,
    NODE_TYPE_STRING_LITERAL,
    NODE_TYPE_IDENTIFIER,

    NODE_TYPE_POST_UNARY_EXPRESSION,
    NODE_TYPE_PRE_UNARY_EXPRESSION,
    NODE_TYPE_BINARY_EXPRESSION,
    NODE_TYPE_CONDITIONAL_EXPRESSION,
    
    NODE_TYPE_ARRAY_REFERENCE,
    NODE_TYPE_FUNCTION_CALL,
    NODE_TYPE_CAST,
    
    NODE_TYPE_EXPRESSION_LIST,
    NODE_TYPE_ARGUMENT_LIST,
    
//STATEMENT:
    NODE_TYPE_BREAK,
    NODE_TYPE_CONTINUE,
    NODE_TYPE_RETURN,
    NODE_TYPE_GOTO,
    NODE_TYPE_SKIP,
    
    NODE_TYPE_IF,
    NODE_TYPE_SWITCH,
    
    NODE_TYPE_FOR,
    NODE_TYPE_WHILE,
    NODE_TYPE_DO_WHILE,
};

class Node {
public:
   Node(NodeType type);

   NodeType type();
   
private:
   NodeType _type;
};

#endif
